local lib=require("lib.lib")

local ps={}

function ps.set_planet_str(planet,superplanet) --Sets superplanet surface property of planet, encoding 8-byte/8-character string into double.
    assert(#superplanet <= 8, "Superplanet length exceeds 8 characters; cannot encode.")
    assert(planet["surface_properties"],tostring(planet) .. " has no surface properties")
    planet["surface_properties"]["planet-str"]=lib.encode_string(superplanet)

end

function ps.get_planet_str(planet) --Gets planet_str surface property of planet, decoding 8-byte double into string.
    if planet["surface_properties"]["planet-str"] ~= nil then --If planet_str is defined, then return existing str 
        return lib.decode_string(planet["surface_properties"]["planet-str"])
    else 
        return string.sub(planet.name, 1, 8) --If not, return string that would be autogenerated in data-final-fixes.
    end
    
end

return ps